set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256color*:Tc"
set -ga terminal-overrides ",xterm-termite:Tc"
set -ga terminal-overrides ",alacritty:Tc"

set -g status-keys vi
set -g history-limit 10000

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start window numbering at 1
set -g base-index 1

# On cygwin tmux refuses to start in the cwd unless the following is set;
set-environment -g CHERE_INVOKING 1

set -g mouse on

# Focus events enabled for terminals that support them
set -g focus-events on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# Use vim keybindings in copy mode
setw -g mode-keys vi
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v'               send -X begin-selection                              # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v'             send -X begin-selection \; send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y'               send -X copy-selection                               # Yank selection in copy mode.
bind-key -T copy-mode-vi C-c               send-keys -X cancel
bind-key -T copy-mode-vi Escape            send-keys -X cancel

{{- $bg_status_left               := "white" }}
{{- $fg_status_left               := "black" }}
{{- $bg_status                    := "lightgray" }}
{{- $fg_status                    := "white" }}
{{- $bg_window_status             := "lightgray" }}
{{- $fg_window_status             := "black" }}
{{- $bg_window_status_current     := "lightgray" }}
{{- $fg_window_status_current     := "cyan" }}
{{- $bg_window_status_bell        := "lightgray" }}
{{- $fg_window_status_bell        := "orange" }}
{{- $bg_window_status_activity    := "lightgray" }}
{{- $fg_window_status_activity    := "yellow" }}
{{- $fg_status                    := "white" }}
{{- $bg_status_right              := "white" }}
{{- $fg_status_right              := "black" }}

{{- if eq .host_color "blue" }}
{{-     $bg_status_left  = "blue" }}
{{-     $fg_status_left  = "white" }}
{{-     $bg_status_right = "blue" }}
{{-     $fg_status_right = "white" }}
{{- else if eq .host_color "cyan" }}
{{-     $bg_status_left  = "cyan" }}
{{-     $fg_status_left  = "white" }}
{{-     $bg_status_right = "cyan" }}
{{-     $fg_status_right = "white" }}
{{- else if eq .host_color "green" }}
{{-     $bg_status_left  = "green" }}
{{-     $fg_status_left  = "white" }}
{{-     $bg_status_right = "green" }}
{{-     $fg_status_right = "white" }}
{{- else if eq .host_color "magenta" }}
{{-     $bg_status_left  = "magenta" }}
{{-     $fg_status_left  = "white" }}
{{-     $bg_status_right = "magenta" }}
{{-     $fg_status_right = "white" }}
{{- else if eq .host_color "red" }}
{{-     $bg_status_left  = "red" }}
{{-     $fg_status_left  = "white" }}
{{-     $bg_status_right = "red" }}
{{-     $fg_status_right = "white" }}
{{- else if eq .host_color "yellow" }}
{{-     $bg_status_left  = "yellow" }}
{{-     $fg_status_left  = "white" }}
{{-     $bg_status_right = "yellow" }}
{{-     $fg_status_right = "white" }}
{{- end }}

{{- /* As for the hostname - some environments use a ridiculously convoluted
hostname construct that would fill the whole status bar on its own, therefore,
we do some static translation to get to a useful value */}}
{{- $static_hostname              := .chezmoi.hostname }}
{{- if contains "swis" (lower .chezmoi.fqdnHostname) }}
{{-     if contains "eu-west" (lower .chezmoi.fqdnHostname) }}
{{-         $static_hostname = "swis-ireland" }}
{{-     end }}
{{- else if contains "nxdi" (lower .chezmoi.fqdnHostname) }}
{{-     if contains "us-aus01" (lower .chezmoi.fqdnHostname) }}
{{-         $static_hostname = "nxdi-austin" }}
{{-     end }}
{{-     if contains "kr-awsc1" (lower .chezmoi.fqdnHostname) }}
{{-         $static_hostname = "nxdi-seoul" }}
{{-     end }}
{{- end }}

set -g status-left-style bg={{$bg_status_left}},fg={{$fg_status_left}}
set -g status-style bg={{$bg_status}},fg={{$fg_status}}
set -g status-right-style bg={{$bg_status_right}},fg={{$fg_status_right}}
set -g status-style bg={{$bg_status}},fg={{$fg_status}}

set -g window-status-style bg={{$bg_window_status}},fg={{$fg_window_status}}
set -g window-status-current-style bg={{$bg_window_status_current}},fg={{$fg_window_status_current}},bold
set -g window-status-activity-style bg={{$bg_window_status_activity}},fg={{$fg_window_status_activity}}
set -g window-status-bell-style bg={{$bg_window_status_bell}},fg={{$fg_window_status_bell}}
set -g window-status-separator "| "

# Display session name on the left
set -g status-left ' [#{=10:session_name}]  #[bg={{$bg_status}},fg={{$bg_status_right}}]#[fg={{$fg_status}}]  '

# Display hostname in the statusline on the right
set -g status-right '#[bg={{$bg_status}}]#[fg={{$bg_status_right}}]#[default]  {{$static_hostname}} | %H:%M '

# Automatically set pane title
set -g automatic-rename on
set -g automatic-rename-format "#{=32:pane_title}"


# Make the terminal window show some useful information
set-option -g set-titles on
set-option -g set-titles-string "{{$static_hostname}}"

set -g monitor-activity on

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key J resize-pane -D 10
bind-key K resize-pane -U 10
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection with prefix
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
# This relies on vim setting the is_vim variable on enter/leave.
bind -n M-h if-shell -F "#{@is_vim}" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell -F "#{@is_vim}" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell -F "#{@is_vim}" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell -F "#{@is_vim}" "send-keys M-l"  "select-pane -R"

# Quickly swap between windows without prefix
bind -n M-0 "select-window -t:0"
bind -n M-1 "select-window -t:1"
bind -n M-2 "select-window -t:2"
bind -n M-3 "select-window -t:3"
bind -n M-4 "select-window -t:4"
bind -n M-5 "select-window -t:5"
bind -n M-6 "select-window -t:6"
bind -n M-7 "select-window -t:7"
bind -n M-8 "select-window -t:8"
bind -n M-9 "select-window -t:9"


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind t choose-session

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf

# If an application sets a tmux-buffer via load-buffer (this is essentially
# what is happening when nvim does yank in case it is within tmux), copy that
# data also to the system clipboard via an OSC52 sequence.
#
# (Off here, as the nvim config explicitly adds -w.)
#
# set -s command-alias[99] 'load-buffer=load-buffer -w'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'jaclu/tmux-menus'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
