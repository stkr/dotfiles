{
  "telemetry.enableTelemetry": false,
  "telemetry.enableCrashReporter": false,
  "extensions.ignoreRecommendations": true,
  "editor.renderWhitespace": "none",
  "editor.renderControlCharacters": false,
  "workbench.colorTheme": "Default Light+",
  "editor.definitionLinkOpensInPeek": false,
  "editor.gotoLocation.multipleDefinitions": "goto",
  "git.ignoreMissingGitWarning": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "leader",
        "f",
        "a"
      ],
      "commands": [
        "workbench.action.showCommands",
      ]
    },
    {
      "before": [
        "leader",
        "f",
        "g"
      ],
      "commands": [
        "editor.action.clipboardCopyAction",
        "search.action.openNewEditor",
      ]
    },

    // ######################################################### Refactoring
    {
      "before": [ "leader", "r", "f" ],
      "commands": [ "editor.action.formatSelection", ],
      // Note, there is a normal mode equivalent for formatting a document!
    },

    // ######################################################### Misc
    // Bind p in visual mode to paste without overriding the current register
    {
      "before": [ "p", ],
      "after": [ "p", "g", "v", "y" ],
    },
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        "<leader>"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<leader>",
        "q"
      ],
      "after": [
        ":",
        "q",
        "<CR>"
      ]
    },

    // ######################################################### Find
    {
      // Find file
      "before": [ "<leader>", "f", "f" ],
      "commands": [ "workbench.action.quickOpen" ],
    },

    {
      // Find command
      "before": [ "leader", "f", "a" ],
      "commands": [ "workbench.action.showCommands", ]
    },
    {
      // Find global (in files)
      "before": [ "leader", "f", "g" ],
      "commands": [ "search.action.openNewEditor", ]
    },
    {
      "before": [ "leader", "f", "c" ],
      "commands": [ "workbench.action.showAllSymbols", ]
    },
    {
      "before": [ "leader", "f", "s" ], 
      "commands": [ "workbench.action.gotoSymbol", ]
    },
    {
      // Find all references
      "before": [ "leader", "f", "u" ], 
      "commands": [ "editor.action.goToReferences", ]
    },
    {
      // Find all references
      "before": [ "leader", "f", "r" ], 
      "commands": [ "editor.action.goToReferences", ]
    },


    // ######################################################### Windows
    {
      "before": [ "leader", "w", "h" ],
      "commands": [ "workbench.action.focusLeftGroup", ]
    },
    {
      "before": [ "leader", "w", "j" ],
      "commands": [ "workbench.action.focusBelowGroup", ]
    },
    {
      "before": [ "leader", "w", "k" ],
      "commands": [ "workbench.action.focusAboveGroup", ]
    },
    {
      "before": [ "leader", "w", "l" ],
      "commands": [ "workbench.action.focusRightGroup", ]
    },

    // ######################################################### Refactoring
    {
      "before": [ "leader", "r", "f" ],
      "commands": [ "editor.action.formatDocument", ]
      // Note, there is a visual mode equivalent for formatting a selection!
    },
    {
      "before": [ "leader", "r", "r" ],
      "commands": [ "editor.action.rename", ]
    },

    // ######################################################### Misc
    // Quickly switch between buffers
    {
      "before": [ "leader", "." ],
      "commands": [ "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup", ]
    },

    // This is an attempt to resolve the situation of jumplists in combination with search editors 
    // and/or ctrl+clicking on identifiers to get to their definition/declaration.
    // It is suggested in https://github.com/VSCodeVim/Vim/issues/3990, however, does not seem to 
    // improve the situation in my particular usecase.
    // {
    //     "key": "ctrl+o",
    //     "commands": [ "workbench.action.navigateBack" ]
    // },
    // {
    //     "key": "ctrl+i",
    //     "commands": [ "workbench.action.navigateForward" ]
    // },
  ],
  "vim.insertModeKeyBindings": [

    // Exit insert mode with jk or kj
    {
      "before": [ "k", "j" ],
      "after": [ "<Esc>" ]
    },
    {
      "before": [ "j", "k" ],
      "after": [ "<Esc>" ]
    },

  ],
  "vim.replaceWithRegister": true,
  "vim.leader": ",",
  "vim.useSystemClipboard": true,
  "search.mode": "newEditor",
  "files.autoSave": "onFocusChange",
  "clangd.onConfigChanged": "restart"
}